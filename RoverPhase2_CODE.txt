//ROVER TEAM: PHASE 2//ME 4054W//Fall 2019//Written by: Cole Schlavin//email: schla345@umn.edu//RC Controller Ranges/*These are the values that the RC controller sends to its *receiver and then to the arduino board. * These range values correspond to different joystick positions. *///LEFT-RIGHT Rangeint LR_range[4]={950, 1480, 1520, 2050};//FORWARD-BACKWARD Rangeint FB_range[4]={950, 1480, 1520, 2050};double FB=0;double LR=0;int LR_speed=0;//Motor 1 int RPWM1=3;   //The RPWM, LPWM, R_EN, and L_ENint LPWM1=2;   //are ports on the motor controllersint R_EN1=22;  //that control the motors' speed & directionint L_EN1=23;//Motor 2int RPWM2=7;int LPWM2=8;int R_EN2=24;int L_EN2=25;//Motor 3int RPWM3=10;int LPWM3=9;int R_EN3=26;int L_EN3=27;//Motor 4int RPWM4=12;int LPWM4=11;int R_EN4=28;int L_EN4=29;//RC CONTROLLER CHANNELSint rc_channel_LR = 45; //RC remote channel 1 plugged into arduino PWM pin 45 for Left/Right controlint rc_channel_FB = 44; //RC remote channel 3 plugged into arduino PWM pin 44 for Forward/Backward controlint rc_channel_headlight = 4; //SWB channel 5 plugged into arduino PWM pin 4. int headlight = 40; //Headlight digital control pin on Arduinovoid setup() {//Setting the motors and headlight "off" upon start-up...//Headlight  pinMode(rc_channel_headlight, INPUT);  pinMode(headlight, OUTPUT); //Headlight control    Serial.begin(9600);  Serial1.begin(9600);    pinMode(rc_channel_LR, INPUT);  pinMode(rc_channel_FB, INPUT);  //Motor 1    pinMode(RPWM1, OUTPUT);     pinMode(LPWM1, OUTPUT);    pinMode(R_EN1, OUTPUT);    pinMode(L_EN1, OUTPUT);      digitalWrite(RPWM1, LOW);    digitalWrite(LPWM1, LOW);    digitalWrite(R_EN1, LOW);    digitalWrite(L_EN1, LOW);    //Motor 2    pinMode(RPWM2, OUTPUT);    pinMode(LPWM2, OUTPUT);    pinMode(R_EN2, OUTPUT);    pinMode(L_EN2, OUTPUT);    digitalWrite(RPWM2, LOW);    digitalWrite(LPWM2, LOW);    digitalWrite(R_EN2, LOW);    digitalWrite(L_EN2, LOW);//Motor 3    pinMode(RPWM3, OUTPUT);    pinMode(LPWM3, OUTPUT);    pinMode(R_EN3, OUTPUT);    pinMode(L_EN3, OUTPUT);    digitalWrite(RPWM3, LOW);    digitalWrite(LPWM3, LOW);    digitalWrite(R_EN3, LOW);    digitalWrite(L_EN3, LOW);//Motor 4    pinMode(RPWM4, OUTPUT);    pinMode(LPWM4, OUTPUT);    pinMode(R_EN4, OUTPUT);    pinMode(L_EN4, OUTPUT);    digitalWrite(RPWM4, LOW);    digitalWrite(LPWM4, LOW);    digitalWrite(R_EN4, LOW);    digitalWrite(L_EN4, LOW);}void loop() {  int pwm_LR=0;  int pwm_FB=0;  int rc_LR = pulseIn(rc_channel_LR, HIGH, 25000);  int rc_FB = pulseIn(rc_channel_FB, HIGH, 25000);  int rc_headlight = pulseIn(rc_channel_headlight, HIGH, 25000);//Headlight Control  if(rc_headlight < 1500){  //Headlight switch "on"              digitalWrite(headlight, HIGH);  }    if(rc_headlight > 1500){  //Headlight switch "off"              digitalWrite(headlight, LOW);  }//Error Message  if(rc_LR==0 || rc_FB==0)   {      Serial.println("no signal from Controls");  }//TWO IF CONDITIONS //TWO IF CONDITIONS //TWO IF CONDITIONS//TWO IF CONDITIONS //TWO IF CONDITIONS //TWO IF CONDITIONS//TWO IF CONDITIONS //TWO IF CONDITIONS //TWO IF CONDITIONS//TWO IF CONDITIONS //TWO IF CONDITIONS //TWO IF CONDITIONS//TWO IF CONDITIONS //TWO IF CONDITIONS //TWO IF CONDITIONS/*The "Two if-condition" statements must come before the "One if conditionstatements, as the "one if-condition statements will satisfy the "Two if condition" statements... Causing them to excecute, and the "two if-condition" statements won't.*///Forward AND Right          else if(rc_FB > FB_range[2] && rc_LR > LR_range[2]){               pwm_FB = map(rc_FB, FB_range[2], FB_range[3], 0, 255);               pwm_LR = map(rc_LR, LR_range[2], LR_range[3], 0, 255);              /*The "map" function takes the RC control values (950-2050)              and turns them into values between 0 and 255, as PWM signals               can only transmit values of 0-255.*/              FB=pwm_FB;              LR=pwm_LR;              LR_speed=round(FB*((255-LR)/255));                          //Motor 1                  digitalWrite(R_EN1, HIGH);              digitalWrite(L_EN1, HIGH);              analogWrite(RPWM1,pwm_FB);              analogWrite(LPWM1,0);                    //Motor 2                  digitalWrite(R_EN2, HIGH);              digitalWrite(L_EN2, HIGH);              analogWrite(RPWM2,LR_speed);              analogWrite(LPWM2,0);                    //Motor 3                  digitalWrite(R_EN3, HIGH);              digitalWrite(L_EN3, HIGH);              analogWrite(RPWM3,LR_speed);              analogWrite(LPWM3,0);                    //Motor 4                  digitalWrite(R_EN4, HIGH);              digitalWrite(L_EN4, HIGH);              analogWrite(RPWM4,pwm_FB);              analogWrite(LPWM4,0);                              Serial.print("Forward speed: ");              Serial.println(pwm_FB);              Serial.print("Right speed: ");              Serial.println(pwm_LR);                    }//FORWARD AND LEFT          else if(rc_FB > FB_range[2] && rc_LR < LR_range[1]){               pwm_FB = map(rc_FB, FB_range[2], FB_range[3], 0, 255);              pwm_LR = map(rc_LR, LR_range[1], LR_range[0], 0, 255);              FB=pwm_FB;              LR=pwm_LR;              LR_speed=round(FB*((255-LR)/255));                  //Motor 1                  digitalWrite(R_EN1, HIGH);              digitalWrite(L_EN1, HIGH);              analogWrite(RPWM1,LR_speed); //Left front Motor slows down proportionally to how far stick is to the left              analogWrite(LPWM1,0);                    //Motor 2                  digitalWrite(R_EN2, HIGH);              digitalWrite(L_EN2, HIGH);              analogWrite(RPWM2,pwm_FB);              analogWrite(LPWM2,0);                    //Motor 3                  digitalWrite(R_EN3, HIGH);              digitalWrite(L_EN3, HIGH);              analogWrite(RPWM3,pwm_FB);              analogWrite(LPWM3,0);                    //Motor 4                  digitalWrite(R_EN4, HIGH);              digitalWrite(L_EN4, HIGH);              analogWrite(RPWM4,LR_speed); //Left rear Motor slows down proportionally to how far stick is to the left              analogWrite(LPWM4,0);                              Serial.print(" Up speed: ");              Serial.println(pwm_FB);                            Serial.print(" left speed: ");              Serial.println(pwm_LR);          }//Backward AND Left          else if(rc_FB < FB_range[1] && rc_LR < LR_range[1]){              pwm_FB = map(rc_FB, FB_range[1], FB_range[0], 0, 255);              pwm_LR = map(rc_LR, LR_range[1], LR_range[0], 0, 255);              FB=pwm_FB;              LR=pwm_LR;              LR_speed=round(FB*((255-LR)/255));                      //Motor 1                  digitalWrite(R_EN1, HIGH);              digitalWrite(L_EN1, HIGH);              analogWrite(RPWM1,0);              analogWrite(LPWM1,LR_speed);                    //Motor 2                  digitalWrite(R_EN2, HIGH);              digitalWrite(L_EN2, HIGH);              analogWrite(RPWM2,0);              analogWrite(LPWM2,pwm_FB);                    //Motor 3                  digitalWrite(R_EN3, HIGH);              digitalWrite(L_EN3, HIGH);              analogWrite(RPWM3,0);              analogWrite(LPWM3,pwm_FB);                    //Motor 4                  digitalWrite(R_EN4, HIGH);              digitalWrite(L_EN4, HIGH);              analogWrite(RPWM4,0);              analogWrite(LPWM4,LR_speed);                      Serial.print(" Backward speed: ");              Serial.println(pwm_FB);              Serial.print("Right speed: ");              Serial.println(pwm_LR);          }//Backward AND Right          else if(rc_FB < FB_range[1] && rc_LR > LR_range[2]){              pwm_FB = map(rc_FB, FB_range[1], FB_range[0], 0, 255);              pwm_LR = map(rc_LR, LR_range[2], LR_range[3], 0, 255);              FB=pwm_FB;              LR=pwm_LR;              LR_speed=round(FB*((255-LR)/255));                      //Motor 1                  digitalWrite(R_EN1, HIGH);              digitalWrite(L_EN1, HIGH);              analogWrite(RPWM1,0);              analogWrite(LPWM1,pwm_FB);                    //Motor 2                  digitalWrite(R_EN2, HIGH);              digitalWrite(L_EN2, HIGH);              analogWrite(RPWM2,0);              analogWrite(LPWM2,LR_speed);                    //Motor 3                  digitalWrite(R_EN3, HIGH);              digitalWrite(L_EN3, HIGH);              analogWrite(RPWM3,0);              analogWrite(LPWM3,LR_speed);                    //Motor 4                  digitalWrite(R_EN4, HIGH);              digitalWrite(L_EN4, HIGH);              analogWrite(RPWM4,0);              analogWrite(LPWM4,pwm_FB);                      Serial.print(" Backward speed: ");              Serial.println(pwm_FB);              Serial.print("Right speed: ");              Serial.println(pwm_LR);          }//ONE IF CONDITION //ONE IF CONDITION //ONE IF CONDITION //ONE IF CONDITION //ONE IF CONDITION //ONE IF CONDITION //ONE IF CONDITION //ONE IF CONDITION //ONE IF CONDITION //ONE IF CONDITION //ONE IF CONDITION //ONE IF CONDITION //ONE IF CONDITION //ONE IF CONDITION //ONE IF CONDITION         //Forward          else if(rc_FB > FB_range[2]){               pwm_FB = map(rc_FB, FB_range[2], FB_range[3], 0, 255); //map our speed to 0-255 range                                                  //Since 1530-2000 was range on controller for Right                 //Motor 1                  digitalWrite(R_EN1, HIGH);              digitalWrite(L_EN1, HIGH);              analogWrite(RPWM1,pwm_FB);              analogWrite(LPWM1,0);               //Motor 2                  digitalWrite(R_EN2, HIGH);              digitalWrite(L_EN2, HIGH);              analogWrite(RPWM2,pwm_FB);              analogWrite(LPWM2,0);               //Motor 3                  digitalWrite(R_EN3, HIGH);              digitalWrite(L_EN3, HIGH);              analogWrite(RPWM3,pwm_FB);              analogWrite(LPWM3,0);               //Motor 4                  digitalWrite(R_EN4, HIGH);              digitalWrite(L_EN4, HIGH);              analogWrite(RPWM4,pwm_FB);              analogWrite(LPWM4,0);                              Serial.print(" Up speed: ");              Serial.println(pwm_FB);          }        //Backward          else if(rc_FB < FB_range[1]){              pwm_FB = map(rc_FB, FB_range[1], FB_range[0], 0, 255); //map our speed to 0-255 range                      //Motor 1                  digitalWrite(R_EN1, HIGH);              digitalWrite(L_EN1, HIGH);              analogWrite(RPWM1,0);              analogWrite(LPWM1,pwm_FB);                    //Motor 2                  digitalWrite(R_EN2, HIGH);              digitalWrite(L_EN2, HIGH);              analogWrite(RPWM2,0);              analogWrite(LPWM2,pwm_FB);                    //Motor 3                  digitalWrite(R_EN3, HIGH);              digitalWrite(L_EN3, HIGH);              analogWrite(RPWM3,0);              analogWrite(LPWM3,pwm_FB);                    //Motor 4                  digitalWrite(R_EN4, HIGH);              digitalWrite(L_EN4, HIGH);              analogWrite(RPWM4,0);              analogWrite(LPWM4,pwm_FB);                      Serial.print(" Backward speed: ");              Serial.println(pwm_FB);          }          //STOP CONDITION  else{                             Serial.println("Both sticks centered");    //If both stick are centered, Don't move              //Motor 1      digitalWrite(RPWM1, LOW);    digitalWrite(LPWM1, LOW);    digitalWrite(R_EN1, LOW);    digitalWrite(L_EN1, LOW);    //Motor 2    digitalWrite(RPWM2, LOW);    digitalWrite(LPWM2, LOW);    digitalWrite(R_EN2, LOW);    digitalWrite(L_EN2, LOW);//Motor 3    digitalWrite(RPWM3, LOW);    digitalWrite(LPWM3, LOW);    digitalWrite(R_EN3, LOW);    digitalWrite(L_EN3, LOW);        //Motor 4    digitalWrite(RPWM4, LOW);    digitalWrite(LPWM4, LOW);    digitalWrite(R_EN4, LOW);    digitalWrite(L_EN4, LOW);  }delay(1);};